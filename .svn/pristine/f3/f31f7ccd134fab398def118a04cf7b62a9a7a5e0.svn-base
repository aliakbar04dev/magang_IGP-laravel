<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

use App\Http\Requests;
use Illuminate\Support\Facades\Session;
use Illuminate\Support\Facades\Auth;
use App\HrdRegistrasiKaryawan;
use App\User;
use DB;
use Redirect,Response;
use Illuminate\Support\Facades\Validator;

class HrdRegistratsiKarController extends Controller
{
    public function indexreg(Request $request){
        if(strlen(Auth::user()->username) == 5) {
           
            //new flow;
            	$kar = new HrdRegistrasiKaryawan();
            	$datpendidikan = $kar->pendKaryawan(Auth::user()->username);

            	$data = $kar->GetSequenceNumber();
	            $last_ =(int)substr($data->no_reg,-3);
	            $last_new = $last_ + 1; 
            	$seq_number = "REG". date("Ym"). $last_new ;            	
	            $store_noreg = $kar->StoreNoReg($seq_number);
	            $datkar = $kar->masKaryawan($seq_number);            
	            // $alamatdom = $kar->almtKaryawan($seq_number,'1');            
	            // $alamatktp = $kar->almtKaryawan($seq_number,'2');        
	           //  if ($request->ajax())
            // 	return view('hr.mobile.regkaryawan.index_')->with(compact(['datkar','alamatdom','alamatktp','datpendidikan']))->with('seq_number', $seq_number);
            // else
            	return view('hr.mobile.regkaryawan.ajax')->with(compact(['datkar']))->with('seq_number', $seq_number)->with('page', "data_pribadi" );
        } else {
            return view('errors.403');
        }
        
    }

    public function index_(Request $request, $param, $noreg){
        if(strlen(Auth::user()->username) == 5) {            
            $kar = new HrdRegistrasiKaryawan();
            $datkar = $kar->masKaryawan($noreg);            
            $alamatdom = $kar->almtKaryawan($noreg,'1');            
            $alamatktp = $kar->almtKaryawan($noreg,'2');
            $datpendidikan = $kar->pendKaryawan($noreg);    
            //dd($datkar,$alamatdom, $datpendidikan, $noreg);       
            
            $request->session()->put('sort', $request->has('sort') ? $request->get('sort') : ($request->session()->has('sort') ? $request->session()->get('sort') : 'desc'));

  			return view('hr.mobile.regkaryawan.index_')->with(compact(['datkar', 'alamatdom','alamatktp', 'datpendidikan']))->with('seq_number', $noreg);
          
            // if ($request->ajax())
            // 	return view('hr.mobile.regkaryawan.index_')->with(compact(['datkar','alamatdom','alamatktp', 'datpendidikan']));
            // else
            // return view('hr.mobile.regkaryawan.ajax')->with(compact(['datkar','alamatdom','alamatktp', 'datpendidikan']));  
            	
        } else {
            return view('errors.403');
        }
        
    }

    public function updatedatapribadi(Request $request){

    	if(strlen(Auth::user()->username) == 5) {    		
    		//dd("validasi try");
			$this->validate($request, [
	           'nama' => 'required',
	           'no_ktp' => 'required',
	           'tmp_lahir' => 'required',
	           //'tgl_lahir' => 'required',
	            
	            //alamat
	           'alamat_dom'=>'required|max:350',
	           'rt_dom'=>'required',
	           'rw_dom'=>'required',
	           'kelurahan_dom'=>'required',
	           'kecamatan_dom'=>'required',
	           'kota_dom'=>'required',
	           'kode_pos_dom'=>'required',
	           //'no_telp_hp_dom'=>'required',
	            
	            //alamat
	           'alamat_ktp'=>'required|max:350',
	           'rt_ktp'=>'required',
	           'rw_ktp'=>'required',
	           'kelurahan_ktp'=>'required',
	           'kecamatan_ktp'=>'required',
	           'kota_ktp'=>'required',
	           'kode_pos_ktp'=>'required',
	            //'no_telp_hp_ktp'=>'required',
            ]);

			$msg = 'Penyimpanan data berhasil.';			
            $data = $request->all();                     
            DB::beginTransaction();
            try {  
            	/* Update data Diri */   
            	//$data_pribadi['npk'] = '1';
	            $data_pribadi['nama'] = $data['nama'];
	            $data_pribadi['no_ktp'] = $data['no_ktp'];
	            $data_pribadi['tmp_lahir'] = $data['tmp_lahir'];
	            //$data_pribadi['tgl_lahir'] = $data['tgl_lahir'];
	            $data_pribadi['kd_warga'] = $data['kd_warga'];
	            $data_pribadi['agama'] = $data['agama'];
				$data_pribadi['kelamin'] = $data['kelamin'];
				$data_pribadi['gol_darah'] = $data['gol_darah'];

					$kar = new HrdRegistrasiKaryawan();
	            	$status_db = $kar->masterkarexist(Auth::user()->username);
	            	
					if ($status_db){
						DB::connection('pgsql-mobile')
			        	->table('v_mas_karyawan')
			        	->where("npk", Auth::user()->username)
			        	->update($data_pribadi);
					} else {
						DB::table("v_mas_karyawan")
							->insert(['npk' => Auth::user()->username,'npk'=>$data_pribadi['npk'], 'nama' => $data_pribadi['nama'], 'no_ktp' => $data_pribadi['no_ktp'], 'tmp_lahir' => $data_pribadi['tmp_lahir'],  'kd_warga' => $data_pribadi['kd_warga'], 'agama' => $data_pribadi['agama'], 'kelamin' => $data_pribadi['kelamin'], 'gol_darah' => $data_pribadi['gol_darah'], 'created_at' => $created_at, 'updated_at' => $updated_at]);
                    	DB::commit();
					}

	            /* Update data alamat Domisili */            
	            $dat_alam_dom['kd_alam'] = '1';
	            $dat_alam_dom['desc_alam'] = $data['alamat_dom'];
	           // $dat_alam_dom['desc_alam'] = trim($data['alamat_dom']) !== '' ? trim($data['alamat_dom']) : null;
	            $dat_alam_dom['rt'] = trim($data['rt_dom']) !== '' ? trim($data['rt_dom']) : null;
	            $dat_alam_dom['rw'] = trim($data['rw_dom']) !== '' ? trim($data['rw_dom']) : null;
	            $dat_alam_dom['kelurahan'] = trim($data['kelurahan_dom']) !== '' ? trim($data['kelurahan_dom']) : null;
				$dat_alam_dom['kecamatan'] = trim($data['kecamatan_dom']) !== '' ? trim($data['kecamatan_dom']) : null;
				$dat_alam_dom['kota'] = trim($data['kota_dom']) !== '' ? trim($data['kota_dom']) : null;
				$dat_alam_dom['kd_pos'] = trim($data['kode_pos_dom']) !== '' ? trim($data['kode_pos_dom']) : null;					
					$kar = new HrdRegistrasiKaryawan();
	            	$kodealam_db = $kar->alamatexist(Auth::user()->username, $dat_alam_dom['kd_alam']);
					if ($kodealam_db){
						DB::connection('pgsql-mobile')
			        	->table('v_mas_karyawan_alamat')
			        	->where("npk", Auth::user()->username)
			        	->where("kd_alam", $dat_alam_dom['kd_alam'])
			        	->update($dat_alam_dom);
					} else {
						DB::table("v_mas_karyawan_alamat")
							->insert(['npk' => Auth::user()->username,'kd_alam'=>$dat_alam_dom['kd_alam'], 'desc_alam' => $dat_alam_dom['desc_alam'], 'rt' => $dat_alam_dom['rt'], 'rw' => $dat_alam_dom['rw'], 'kelurahan' => $dat_alam_dom['kelurahan'], 'kecamatan' => $dat_alam_dom['kecamatan'], 'kota' => $dat_alam_dom['kota'], 'kd_pos' => $dat_alam_dom['kd_pos'], 'created_at' => $created_at, 'updated_at' => $updated_at]);
                    	DB::commit();
					}

		         /* Update data alamat KTP */  
		        $dat_alam_ktp['kd_alam'] = '2';
	            $dat_alam_ktp['desc_alam'] = trim($data['alamat_ktp']) !== '' ? trim($data['alamat_ktp']) : null;
	            $dat_alam_ktp['rt'] = trim($data['rt_ktp']) !== '' ? trim($data['rt_ktp']) : null;
	            $dat_alam_ktp['rw'] = trim($data['rw_ktp']) !== '' ? trim($data['rw_ktp']) : null;
	            $dat_alam_ktp['kelurahan'] = trim($data['kelurahan_ktp']) !== '' ? trim($data['kelurahan_ktp']) : null;
				$dat_alam_ktp['kecamatan'] = trim($data['kecamatan_ktp']) !== '' ? trim($data['kecamatan_ktp']) : null;
				$dat_alam_ktp['kota'] = trim($data['kota_ktp']) !== '' ? trim($data['kota_ktp']) : null;
				$dat_alam_ktp['kd_pos'] = trim($data['kode_pos_ktp']) !== '' ? trim($data['kode_pos_ktp']) : null;	
					$kar = new HrdRegistrasiKaryawan();
	            	$kodealam_db = $kar->alamatexist(Auth::user()->username, $dat_alam_ktp['kd_alam']);

					if ($kodealam_db){
						DB::connection('pgsql-mobile')
			        	->table('v_mas_karyawan_alamat')
			        	->where("npk", Auth::user()->username)
			        	->where("kd_alam", $dat_alam_ktp['kd_alam'])
			        	->update($dat_alam_ktp);
					} else {
						//dd($kodealam_db);
						DB::table("v_mas_karyawan_alamat")
							->insert(['npk' => Auth::user()->username, 'kd_alam'=>$dat_alam_ktp['kd_alam'],'desc_alam' => $dat_alam_ktp['desc_alam'], 'rt' => $dat_alam_ktp['rt'], 'rw' => $dat_alam_ktp['rw'], 'kelurahan' => $dat_alam_ktp['kelurahan'], 'kecamatan' => $dat_alam_ktp['kecamatan'], 'kota' => $dat_alam_ktp['kota'], 'kd_pos' => $dat_alam_ktp['kd_pos'], 'created_at' => $created_at, 'updated_at' => $updated_at]);
                    	DB::commit();
					}

				$kar = new HrdRegistrasiKaryawan();
	            $last_noreg = $kar->GetSequenceNumber();
	            $last_ =(int)substr($last_noreg->no_reg,-3);
	            $last_new = $last_ + 1;          
	            $seq_number = "REG". date("Ym"). $last_new ;
	            
	            $store_noreg = $kar->StoreNoReg($seq_number);

				    Session::flash("flash_notification", [
		                "level"=>'success',
		                "message"=>$msg
		            ]);
				    return redirect()->route('mobiles.indexreg');

		    } catch (Exception $ex) {
                DB::rollback();
                $status = 'NG';
                $level = "danger";
	            $msg = 'Gagal menyimpan!';
	            return view('errors.403');
            }		    
		}else {
            return view('errors.403');
        }   
    }

    public function create_datpend(Request $request, $no_reg)
    {
        if ($request->isMethod('get'))
        	
            return view('hr.mobile.regkaryawan.form');
        
        else {
            $rules = [
                'jenjang' => 'required',
                'nama_sekolah' => 'required',
                'tempat' => 'required',
                'tahun_masuk' => 'required|numeric',
                'tahun_lulus' => 'required|numeric',
            ];
            $validator = Validator::make($request->all(), $rules);
            if ($validator->fails())
                return response()->json([
                    'fail' => true,
                    'errors' => $validator->errors()
                ]);
            $datapend = new HrdRegistrasiKaryawan();

            $jenjang = $request['jenjang'];
	        switch($jenjang){
	            case "SD":
	                $request['kd_jenjang']= '1';
	            break;

	            case "SMP":
	                $request['kd_jenjang']= '2';
	            break;

	            case "SMA":
	                $request['kd_jenjang']= '3';
	            break;

	            case "SMK":
	                $request['kd_jenjang']= '4';
	            break;

	            case "D1":
	                $request['kd_jenjang']= '5';
	            break;
	            case "D2":
	                $request['kd_jenjang']= '6';
	            break;

	            case "D3":
	                $request['kd_jenjang']= '7';
	            break;

	            case "S1":
	                $request['kd_jenjang']= '8';
	            break;

	            case "S2":
	                $request['kd_jenjang']= '9';
	            break;

	            case "S3":
	                $request['kd_jenjang']= '10';
	            break;
	        }

	        $request['no_reg']= $no_reg;

            $storedata = $datapend->StorePendKaryawan($request->all());
	        if ($storedata){
	        	Session::flash("flash_notification", [
	           		"level"=>"success",
	            	"message"=>"Berhasil menyimpan"
	        	]);	
	        }	        
			
            return response()->json([
                'fail' => false,
                'redirect_url' => url('laravel-crud-search-sort-ajax-modal-form/data_pendidikan'.$request['no_reg'])
            ]);
        }
    }


    public function delete_datpend($id)
    {
        Customer::destroy($id);
        return redirect('/laravel-crud-search-sort-ajax-modal-form');
    }

    public function update_datpend(Request $request, $kd_jenjang)
    {
        if ($request->isMethod('get')){
        	 $datpendidikan = DB::connection('pgsql-mobile')
        	 	 ->table("v_mas_karyawan_pendidikan")
                 ->select(DB::raw("jenjang, nama_sekolah, tempat, tahun_masuk, tahun_lulus, jurusan"))
                 ->where("npk", "=", Auth::user()->username)
                 ->where("kd_jenjang", $kd_jenjang)
                 ->first();
            return view('hr.mobile.regkaryawan.form')->with(compact('datpendidikan'));
            //return view('hr.mobile.regkaryawan.form', ['datpendidikan' => 
        }else if (!$request->isMethod('get')){
            $rules = [
                'jenjang' => 'required',
                'nama_sekolah' => 'required',
                'tempat' => 'required',
                'tahun_masuk' => 'required',
                'tahun_lulus' => 'required',
            ];
            $validator = Validator::make($request->all(), $rules);
            if ($validator->fails())
                return response()->json([
                    'fail' => true,
                    'errors' => $validator->errors()
                ]);

            $jenjang = $request['jenjang'];
	        switch($jenjang){
	            case "SD":
	                $request['kd_jenjang']= '1';
	            break;

	            case "SMP":
	                $request['kd_jenjang']= '2';
	            break;

	            case "SMA":
	                $request['kd_jenjang']= '3';
	            break;

	            case "D1":
	                $request['kd_jenjang']= '4';
	            break;
	            case "D2":
	                $request['kd_jenjang']= '5';
	            break;

	            case "D3":
	                $request['kd_jenjang']= '6';
	            break;

	            case "S1":
	                $request['kd_jenjang']= '7';
	            break;

	            case "S2":
	                $request['kd_jenjang']= '8';
	            break;

	            case "S3":
	                $request['kd_jenjang']= '9';
	            break;
	        }
            /* Update data pendidikan */   
            $data_pendidikan['kd_jenjang'] = $request['kd_jenjang'];
            $data_pendidikan['jenjang'] = $request['jenjang'];
            $data_pendidikan['nama_sekolah'] = $request['nama_sekolah'];
            $data_pendidikan['jurusan'] = $request['jurusan'];
            $data_pendidikan['tempat'] = $request['tempat'];
            $data_pendidikan['tahun_masuk'] = $request['tahun_masuk'];
            $data_pendidikan['tahun_lulus'] = $request['tahun_lulus'];			
				DB::connection('pgsql-mobile')
        		->table('v_mas_karyawan_pendidikan')
        		->where("npk", Auth::user()->username)
        		->where("kd_jenjang","=", $data_pendidikan['kd_jenjang'])
        		->update($data_pendidikan);
        	

            return response()->json([
                'fail' => false,
                'redirect_url' => url('laravel-crud-search-sort-ajax-modal-form')
            ]);
        }
    }

    public function storedatapribadi(Request $request)
    {
    	$rules = [
    		   'nama' => 'required',
	           'no_ktp' => 'required',
	           'tmp_lahir' => 'required',
	           //'tgl_lahir' => 'required',
	            
	            //alamat
	           'alamat_dom'=>'required|max:350',
	           'rt_dom'=>'required',
	           'rw_dom'=>'required',
	           'kelurahan_dom'=>'required',
	           'kecamatan_dom'=>'required',
	           'kota_dom'=>'required',
	           'kode_pos_dom'=>'required',
	           'no_telp_hp_dom'=>'required',
	            
	            //alamat
	           'alamat_ktp'=>'required|max:350',
	           'rt_ktp'=>'required',
	           'rw_ktp'=>'required',
	           'kelurahan_ktp'=>'required',
	           'kecamatan_ktp'=>'required',
	           'kota_ktp'=>'required',
	           'kode_pos_ktp'=>'required',
	           'no_telp_hp_ktp'=>'required',
    	];
    	$validator = Validator::make($request->all(), $rules);
	        if ($validator->fails()){        		
	           return response()->json(['error'=>$validator->errors()->all()]);
	        }  
   
	        $data = $request->all();
       		$kar = new HrdRegistrasiKaryawan();
		    $check = $kar->StoreDataPribadi($data);

	        $arr = array('error' => 'Gagal menyimpan data', 'status' => false);
	        if($check){ 
	        	$arr = array('msg' => 'Data Pribadi anda berhasil disimpan', 'status' => true);
	        }
	        return response()->json($arr);

		    Session::flash("flash_notification", [
                "level"=>'success',
                "message"=>$msg
            ]);
			        


    }

    public function storedatapendukung(Request $request)
    {
    	
    	$no_reg = 'REG2019091002';
	    $rules = [
            'bpjskes' => 'required',
            'bpjsket' => 'required',
            'rek_mandiri' => 'required',
            'bpjskes_file' => 'required',
            'bpjsket_file' => 'required',
            'rek_mandiri_file' => 'required',

        ];       

	    $validator = Validator::make($request->all(), $rules);
	        if ($validator->fails()){
	           return response()->json(['error'=>$validator->errors()->all()]);
	         }   
        $data['bpjskes'] = $request['bpjskes'];
        $data['bpjsket'] = $request['bpjsket'];
        $data['rek_mandiri'] = $request['rek_mandiri'];

        //PROSES UPLOAD FILE
        if ($request->hasFile('bpjskes_file')) {
	        $uploaded_picture = $request->file('bpjskes_file');
	        $extension = $uploaded_picture->getClientOriginalExtension();
	        $filename = $no_reg . '_cm.' . $extension;
	        $filename = base64_encode($filename);
	        if(config('app.env', 'local') === 'production') {
	            $destinationPath = DIRECTORY_SEPARATOR."serverh".DIRECTORY_SEPARATOR."Portal".DIRECTORY_SEPARATOR.config('app.kd_pt', 'XXX').DIRECTORY_SEPARATOR."mgt";
	        } else {
	            $destinationPath = "\\\\192.168.0.5\\Public2\\Portal\\".config('app.kd_pt', 'XXX')."\\mgt";
	        }
	        $img = Image::make($uploaded_picture->getRealPath());
	        if($img->filesize()/1024 > 2048) {
	            $img->save($destinationPath.DIRECTORY_SEPARATOR.$filename, 75);
	        } else {
	            $uploaded_picture->move($destinationPath, $filename);
	        }
	        $data['bpjskes_file'] = $filename;
	    }
         //PROSES UPLOAD FILE
	    if ($request->hasFile('bpjsket_file')) {
	        $uploaded_picture = $request->file('bpjsket_file');
	        $extension = $uploaded_picture->getClientOriginalExtension();
	        $filename = $no_reg . '_cm.' . $extension;
	        $filename = base64_encode($filename);
	        if(config('app.env', 'local') === 'production') {
	            $destinationPath = DIRECTORY_SEPARATOR."serverh".DIRECTORY_SEPARATOR."Portal".DIRECTORY_SEPARATOR.config('app.kd_pt', 'XXX').DIRECTORY_SEPARATOR."mgt";
	        } else {
	            $destinationPath = "\\\\192.168.0.5\\Public2\\Portal\\".config('app.kd_pt', 'XXX')."\\mgt";
	        }
	        $img = Image::make($uploaded_picture->getRealPath());
	        if($img->filesize()/1024 > 2048) {
	            $img->save($destinationPath.DIRECTORY_SEPARATOR.$filename, 75);
	        } else {
	            $uploaded_picture->move($destinationPath, $filename);
	        }
	        $data['bpjsket_file'] = $filename;
	    }
       
		 //PROSES UPLOAD FILE
         if ($request->hasFile('rek_mandiri_file')) {
	        $uploaded_picture = $request->file('rek_mandiri_file');
	        $extension = $uploaded_picture->getClientOriginalExtension();
	        $filename = $no_reg . '_cm.' . $extension;
	        $filename = base64_encode($filename);
	        if(config('app.env', 'local') === 'production') {
	            $destinationPath = DIRECTORY_SEPARATOR."serverh".DIRECTORY_SEPARATOR."Portal".DIRECTORY_SEPARATOR.config('app.kd_pt', 'XXX').DIRECTORY_SEPARATOR."mgt";
	        } else {
	            $destinationPath = "\\\\192.168.0.5\\Public2\\Portal\\".config('app.kd_pt', 'XXX')."\\mgt";
	        }
	        $img = Image::make($uploaded_picture->getRealPath());
	        if($img->filesize()/1024 > 2048) {
	            $img->save($destinationPath.DIRECTORY_SEPARATOR.$filename, 75);
	        } else {
	            $uploaded_picture->move($destinationPath, $filename);
	        }
	        $data['rek_mandiri_file'] = $filename;
	    }


        $kar = new HrdRegistrasiKaryawan();
	    $check = $kar->StoreDataPendukung('REG2019091002', $data);

        $arr = array('error' => 'Gagal menyimpan data', 'status' => false);
        if($check){ 
        	$arr = array('msg' => 'Data Pendukung anda berhasil disimpan', 'status' => true);
        }
        return response()->json($arr);
    }
}
