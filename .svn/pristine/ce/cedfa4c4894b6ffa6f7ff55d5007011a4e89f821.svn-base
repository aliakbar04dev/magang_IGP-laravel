<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use Carbon\Carbon;
use Illuminate\Support\Facades\Session;
use DB;
use Illuminate\Support\Facades\Auth;

class InternalAudit extends Model
{
    protected $connection = 'pgsql-mobile';

    public function masKaryawan($username)
    {
        $mas_karyawan = DB::table("v_mas_karyawan")
        ->select(DB::raw("npk, nama, kd_pt, desc_dep, desc_div, email, kode_dep, kode_div, npk_atasan, kode_gol, desc_jab, tgl_lahir, tgl_masuk_gkd, coalesce(substr(foto,18),'-.jpg') foto, npk_sec_head, npk_dep_head, npk_div_head, tgl_keluar, kode_site, kelamin"))
        ->where("npk", "=", $username)
        ->first();
        return $mas_karyawan;
    }

    public function namaByNpk($npk)
    {
        $nama = DB::table("v_mas_karyawan")
            ->select("nama")
            ->where("npk", "=", $npk)
            ->value("nama");

        return $nama;
    }

    public function namaDivisi($kode_div)
    {
        $nama = DB::table("v_mas_karyawan")
            ->select("desc_div")
            ->where("kode_div", "=", $kode_div)
            ->value("desc_div");
        if($nama == null) {
            $nama = "-";
        }
        return $nama;
    }

    public function namaDepartemen($kode_dep)
    {
        $nama = DB::table("v_mas_karyawan")
            ->select("desc_dep")
            ->where("kode_dep", "=", $kode_dep)
            ->value("desc_dep");
        if($nama == null) {
            $nama = "-";
        }
        return $nama;
    }

    public function getTahunNow(){
        $getTahun = DB::table('ia_pic1')
        ->select('tahun', 'rev_no','date')
        ->where('rev_no', 'like', '%_D')
        ->first();
        if($getTahun == null){
        $getTahun = DB::table('ia_pic1')
        ->select('tahun', 'rev_no','date')
        ->orderBy('date','desc')
        ->orderBy('rev_no', 'desc')
        ->first();
        }    
        return $getTahun;
    }

    public function getNamaData($npk, $tahun, $rev_no){


        $getData = DB::table('ia_pic1')
            ->select('ia_pic1.*', 'ia_pic2.npk', 'ia_pic2.remark', 'v_mas_karyawan.nama', 'v_mas_karyawan.desc_dep', 'v_mas_karyawan.desc_sie')
            ->join('ia_pic2', function($join){
                $join->on('ia_pic1.tahun','=','ia_pic2.tahun');
                $join->on('ia_pic1.rev_no','=','ia_pic2.rev_no');
            })
            ->join('v_mas_karyawan', 'ia_pic2.npk', 'v_mas_karyawan.npk')
            ->where('ia_pic1.rev_no', 'like', '%_D')
            ->where('ia_pic1.tahun', 'like', $tahun)
            ->where('ia_pic1.npk_prepared', 'like', $npk)
            ->orderBy('ia_pic2.npk', 'asc')
            ->get();
        if($getData->count() == 0){
            $getData = DB::table('ia_pic1')
            ->select('ia_pic2.npk', 'ia_pic2.tahun', 'ia_pic2.rev_no', 'ia_pic2.remark', 'v_mas_karyawan.nama', 'v_mas_karyawan.desc_dep', 'v_mas_karyawan.desc_sie')
            // ->join('ia_pic2', 'ia_pic1.tahun', 'ia_pic2.tahun')
            ->join('ia_pic2', function($join){
                $join->on('ia_pic1.tahun','=','ia_pic2.tahun');
                $join->on('ia_pic1.rev_no','=','ia_pic2.rev_no');
            })
            ->join('v_mas_karyawan', 'ia_pic2.npk', 'v_mas_karyawan.npk')
            ->where('ia_pic1.npk_prepared', 'like', $npk)
            ->where('ia_pic1.rev_no', 'like', $rev_no)
            ->where('ia_pic1.tahun', 'like', $tahun)
            ->orderBy('ia_pic2.npk', 'asc')
            ->get();
            }            
        return $getData;
    }
    
    public function getTrainingData($npk){
        $getData = DB::table('ia_pic1')
            ->select('ia_pic1.*', 'ia_pic2.npk', 'v_mas_karyawan.nama', 'tr_report_training.kode_tr', 'tr_report_training.nama_training')
            ->join('ia_pic2', 'ia_pic1.tahun', 'ia_pic2.tahun')
            ->join('tr_report_training', 'tr_report_training.npk', 'ia_pic2.npk')
            ->join('v_mas_karyawan', 'ia_pic2.npk', 'v_mas_karyawan.npk')
            ->where('ia_pic1.rev_no', 'like', '%_D')
            ->where('ia_pic1.npk_prepared', 'like', $npk)
            ->orderBy('kode_tr', 'asc')
            ->get();
        if($getData->count() == 0){
            $getData = DB::table('ia_pic1')
            ->select('ia_pic1.*', 'ia_pic2.npk', 'v_mas_karyawan.nama', 'tr_report_training.kode_tr', 'tr_report_training.nama_training')
            ->join('ia_pic2', 'ia_pic1.tahun', 'ia_pic2.tahun')
            ->join('tr_report_training', 'tr_report_training.npk', 'ia_pic2.npk')
            ->join('v_mas_karyawan', 'ia_pic2.npk', 'v_mas_karyawan.npk')
            ->where('ia_pic1.npk_prepared', 'like', $npk)
            ->orderBy('ia_pic1.rev_no', 'desc')
            ->get();
            }            
        return $getData;
    }

    public function getTrainingData2(){
        $getTahun = DB::table('ia_pic1')
        ->select('tahun', 'rev_no','date')
        ->where('rev_no', 'like', '%_D')
        ->first();
        if($getTahun == null){
        $getTahun = DB::table('ia_pic1')
        ->select('tahun', 'rev_no','date')
        ->orderBy('date','desc')
        ->orderBy('rev_no', 'desc')
        ->first();
        }

        $getTrainingData = DB::table('ia_pic2')
        ->select(DB::raw('ia_pic2.npk, ia_mtrn.kode_tr, count(tr_report_training.kode_tr) as nilai'))
        ->crossJoin('ia_mtrn')
        ->leftJoin('tr_report_training', function($join){
            $join->on('ia_pic2.npk','=','tr_report_training.npk');
            $join->on('ia_mtrn.kode_tr','=','tr_report_training.kode_tr');
        })
        ->where([
            ['tahun', 'like', $getTahun->tahun],
            ['rev_no', 'like', $getTahun->rev_no],
            ])
        ->groupBy('ia_mtrn.kode_tr', 'ia_pic2.npk')
        ->orderBy('npk','asc')
        ->orderBy('kode_tr','asc')
        ->get();

        return $getTrainingData;
    }

    public function getTrainingDataByNpk($npk){
        $getTrainingDataNpk = DB::table('ia_pic2')
        ->select(DB::raw('v_mas_karyawan.nama, v_mas_karyawan.desc_dep, v_mas_karyawan.desc_sie, ia_pic2.npk, ia_mtrn.kode_tr, count(tr_report_training.kode_tr) as nilai'))
        ->crossJoin('ia_mtrn')
        ->leftJoin('tr_report_training', function($join){
            $join->on('ia_pic2.npk','=','tr_report_training.npk');
            $join->on('ia_mtrn.kode_tr','=','tr_report_training.kode_tr');
        })
        ->leftJoin('v_mas_karyawan', 'v_mas_karyawan.npk', 'ia_pic2.npk')
        ->where('ia_pic2.npk', 'like', $npk)
        ->groupBy('ia_mtrn.kode_tr', 'ia_pic2.npk', 'v_mas_karyawan.nama', 'v_mas_karyawan.desc_dep', 'v_mas_karyawan.desc_sie')
        ->orderBy('ia_pic2.npk','asc')
        ->orderBy('kode_tr','asc')
        ->get();

        return $getTrainingDataNpk;
    }

    public function getRequiredTraining(){
        $getRequiredTraining = DB::table('ia_mtrn')
        ->orderBy('kode_tr', 'asc')
        ->get();

        return $getRequiredTraining;
    }

    // public function replicateData($tahun, $rev){
    //     $eachdata = DB::
    //     ->table('ia_pic2')
    //     ->where([
    //         ['tahun', 'like', $tahun],
    //         ['rev_no', 'like', $rev],
    //         ])           
    //     ->get();

    //     foreach ($eachdata as $data){
    //         $replicate = $data->replicate();
    //         $replicate->save();
    //     }

    //     return $eachdata;
    // }
}
