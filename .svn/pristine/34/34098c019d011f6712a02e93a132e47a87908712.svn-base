<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

use App\Http\Requests;
use Yajra\Datatables\Html\Builder;
use Yajra\Datatables\Facades\Datatables;
use App\Http\Requests\StoreBgttCrRateRequest;
use Illuminate\Support\Facades\Session;
use App\Http\Requests\UpdateBgttCrRateRequest;
use Illuminate\Support\Facades\Auth;
use Carbon\Carbon;
use DB;
use Exception;
use App\User;
use App\BgttCrRate;
use Illuminate\Support\Facades\Input;

class BgttCrRatesController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        if(Auth::user()->can(['budget-cr-rate-*'])) {
            return view('budget.rate.index');
        } else {
            return view('errors.403');
        }
    }

    public function dashboard(Request $request)
    {
        if(Auth::user()->can(['budget-cr-rate-*'])) {
            if ($request->ajax()) {

                $bgttcrrates = BgttCrRate::whereNotNull("thn_period")
                ->orderBy("thn_period", "desc");

                return Datatables::of($bgttcrrates)
                ->editColumn('thn_period', function($bgttcrrate){
                    return '<a href="'.route('bgttcrrates.show', base64_encode($bgttcrrate->thn_period)).'" data-toggle="tooltip" data-placement="top" title="Show Detail Tahun: '.$bgttcrrate->thn_period.'">'.$bgttcrrate->thn_period.'</a>';
                })
                ->editColumn('rate_mp', function($bgttcrrate){
                    return numberFormatter(0, 5)->format($bgttcrrate->rate_mp);
                })
                ->filterColumn('rate_mp', function ($query, $keyword) {
                    $query->whereRaw("trim(to_char(rate_mp,'999999999999999999.99999')) like ?", ["%$keyword%"]);
                })
                ->editColumn('creaby', function($bgttcrrate){
                    if(!empty($bgttcrrate->creaby)) {
                        $name = $bgttcrrate->namaByNpk($bgttcrrate->creaby);
                        if(!empty($bgttcrrate->dtcrea)) {
                            $tgl = Carbon::parse($bgttcrrate->dtcrea)->format('d/m/Y H:i');
                            return $bgttcrrate->creaby.' - '.$name.' - '.$tgl;
                        } else {
                            return $bgttcrrate->creaby.' - '.$name;
                        }
                    } else {
                        return "";
                    }
                })
                ->filterColumn('creaby', function ($query, $keyword) {
                    $query->whereRaw("(creaby||' - '||(select v.nama from v_mas_karyawan v where v.npk = bgtt_cr_rates.creaby limit 1)||coalesce(' - '||to_char(dtcrea,'dd/mm/yyyy hh24:mi'),'')) like ?", ["%$keyword%"]);
                })
                ->orderColumn('creaby', 'creaby $1')
                ->editColumn('modiby', function($bgttcrrate){
                    if(!empty($bgttcrrate->modiby)) {
                        $name = $bgttcrrate->namaByNpk($bgttcrrate->modiby);
                        if(!empty($bgttcrrate->dtmodi)) {
                            $tgl = Carbon::parse($bgttcrrate->dtmodi)->format('d/m/Y H:i');
                            return $bgttcrrate->modiby.' - '.$name.' - '.$tgl;
                        } else {
                            return $bgttcrrate->modiby.' - '.$name;
                        }
                    } else {
                        return "";
                    }
                })
                ->filterColumn('modiby', function ($query, $keyword) {
                    $query->whereRaw("(modiby||' - '||(select v.nama from v_mas_karyawan v where v.npk = bgtt_cr_rates.modiby limit 1)||coalesce(' - '||to_char(dtmodi,'dd/mm/yyyy hh24:mi'),'')) like ?", ["%$keyword%"]);
                })
                ->orderColumn('modiby', 'modiby $1')
                ->addColumn('action', function($bgttcrrate){
                    if($bgttcrrate->checkEdit() === "T") {
                        if(Auth::user()->can(['budget-cr-rate-create', 'budget-cr-rate-delete'])) {
                            return view('datatable._action', [
                                'model' => $bgttcrrate,
                                'form_url' => route('bgttcrrates.destroy', base64_encode($bgttcrrate->thn_period)),
                                'edit_url' => route('bgttcrrates.edit', base64_encode($bgttcrrate->thn_period)),
                                'class' => 'form-inline js-ajax-delete',
                                'form_id' => 'form-'.$bgttcrrate->thn_period,
                                'id_table' => 'tblMaster',
                                'confirm_message' => 'Anda yakin menghapus Rate Tahun: ' . $bgttcrrate->thn_period . '?'
                            ]);
                        } else {
                            return "";
                        }
                    } else {
                        return "";
                    }
                })
                ->make(true);
            } else {
                return redirect('home');
            }
        } else {
            return view('errors.403');
        }
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        if(Auth::user()->can('budget-cr-rate-create')) {
            return view('budget.rate.create');
        } else {
            return view('errors.403');
        }
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        //
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        if(Auth::user()->can(['budget-cr-rate-*'])) {
            $bgttcrrate = BgttCrRate::find(base64_decode($id));
            if($bgttcrrate != null) {
                return view('budget.rate.show', compact('bgttcrrate'));
            } else {
                return view('errors.404');
            }
        } else {
            return view('errors.403');
        }
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        //
    }
}
